package src.LeetCode.STRING;

/*
LeetCode Problem #389 - Find the Difference

Problem Statement:
You are given two strings s and t.
String t is generated by shuffling string s and then adding one more letter at a random position.
Return the letter that was added to t.

Example 1:
Input: s = "abcd", t = "abcde"
Output: "e"

Example 2:
Input: s = "", t = "y"
Output: "y"

Approach (Using XOR):
1. Initialize a char variable res to 0.
   - In Java, char is stored as a 16-bit unsigned integer.
   - Setting res = 0 means all bits are zero initially.

2. XOR all characters from s into res.
3. XOR all characters from t into res.
   - XOR has the property: a ^ a = 0 and a ^ 0 = a.
   - So all matching characters between s and t cancel out to 0.
   - Only the extra character in t will remain in res after all XORs.

4. Return res as the extra character.

Time Complexity: O(n)
Space Complexity: O(1)
*/

public class LC_389_FindTheDifference {

    public char findTheDifference(String s, String t) {
        // Step 1: Initialize result as 0 (all bits zero)
        // This will be used to accumulate XOR values.
        char res = 0;

        // Step 2: XOR all characters from s
        for (char c : s.toCharArray()) {
            res ^= c;  // same as res = (char)(res ^ c)
        }

        // Step 3: XOR all characters from t
        for (char c : t.toCharArray()) {
            res ^= c;  // XOR again with t's characters
        }

        // Step 4: The remaining value in res is the extra character
        return res;
    }

    // Quick test
    public static void main(String[] args) {
        LC_389_FindTheDifference solution = new LC_389_FindTheDifference();
        System.out.println(solution.findTheDifference("abcd", "abcde")); // Output: e
        System.out.println(solution.findTheDifference("", "y"));         // Output: y
    }
}
